-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-11-24 18:42:01 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE afectiune (
    id   NUMBER(5) NOT NULL,
    nume VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE afectiune
    ADD CONSTRAINT afectiune_nume_ck CHECK ( length(nume) > 2 );

ALTER TABLE afectiune ADD CONSTRAINT afectiune_pk PRIMARY KEY ( id );

ALTER TABLE afectiune ADD CONSTRAINT afectiune_nume_un UNIQUE ( nume );

CREATE TABLE detalii_afectiune (
    gravitate              NUMBER(1) NOT NULL,
    rata_vindecare         NUMBER(5, 2) NOT NULL,
    tratament_medicamentos CHAR(2),
    rata_suicid            NUMBER(5, 2),
    specificitate_gen      CHAR(8),
    asistenta_personala    CHAR(2),
    afectiune_id           NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE detalii_afectiune
    ADD CONSTRAINT detalii_gravitate_ck CHECK ( gravitate BETWEEN 0 AND 10 );

ALTER TABLE detalii_afectiune
    ADD CONSTRAINT detalii_rata_vindecare_ck CHECK ( rata_vindecare BETWEEN 0.0 AND 100.0 );

ALTER TABLE detalii_afectiune
    ADD CONSTRAINT detalii_tratament_ck CHECK ( tratament_medicamentos IN ( 'Da', 'Nu' ) );

ALTER TABLE detalii_afectiune
    ADD CONSTRAINT detalii_rata_suicid_ck CHECK ( rata_suicid BETWEEN 0.0 AND 100.0 );

ALTER TABLE detalii_afectiune
    ADD CONSTRAINT detalii_specificitate_gen_ck CHECK ( specificitate_gen IN ( 'Feminin', 'Masculin', 'Nu' ) );

ALTER TABLE detalii_afectiune
    ADD CONSTRAINT detalii_asistenta_ck CHECK ( asistenta_personala IN ( 'Da', 'Nu' ) );

CREATE UNIQUE INDEX detalii_afectiune__idx ON
    detalii_afectiune (
        afectiune_id
    ASC )
        LOGGING;

CREATE TABLE fisa_afectiune_fk (
    fisa_medicala_id NUMBER(10) NOT NULL,
    afectiune_id     NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE fisa_afectiune_fk ADD CONSTRAINT fisa_afectiune_fk_pk PRIMARY KEY ( fisa_medicala_id,
                                                                                afectiune_id );

CREATE TABLE fisa_medicala (
    id                    NUMBER(10) NOT NULL,
    data_eliberare        DATE NOT NULL,
    data_revenire_control DATE,
    pacient_id            NUMBER(5) NOT NULL,
    psihiatru_id          NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE fisa_medicala ADD CONSTRAINT fisa_medicala_pk PRIMARY KEY ( id );

CREATE TABLE mdt_fisa_fk (
    medicament_id          NUMBER(5) NOT NULL,
    fisa_medicala_id       NUMBER(10) NOT NULL,
    numar_de_bucati_zilnic NUMBER(1) NOT NULL,
    descriere_orar         VARCHAR2(100) NOT NULL
)
LOGGING;

ALTER TABLE mdt_fisa_fk ADD CONSTRAINT medicament_fisa_fk_pk PRIMARY KEY ( medicament_id,
                                                                           fisa_medicala_id );

CREATE TABLE medicament (
    id                 NUMBER(5) NOT NULL,
    nume               VARCHAR2(50) NOT NULL,
    firma_producatoare VARCHAR2(30)
)
LOGGING;

ALTER TABLE medicament
    ADD CONSTRAINT medicament_nume_ck CHECK ( length(nume) >= 2 );

ALTER TABLE medicament
    ADD CONSTRAINT mdt_firma_producatoare_ck CHECK ( length(firma_producatoare) >= 2 );

ALTER TABLE medicament ADD CONSTRAINT medicament_pk PRIMARY KEY ( id );

ALTER TABLE medicament ADD CONSTRAINT mdt_nume_firma_producatoare_un UNIQUE ( nume,
                                                                              firma_producatoare );

CREATE TABLE pacient (
    id            NUMBER(5) NOT NULL,
    nume          VARCHAR2(30) NOT NULL,
    prenume       VARCHAR2(30) NOT NULL,
    data_nasterii DATE NOT NULL,
    numar_telefon VARCHAR2(10) NOT NULL,
    gen           CHAR(10) NOT NULL,
    adresa        VARCHAR2(50)
)
LOGGING;

ALTER TABLE pacient
    ADD CONSTRAINT pacient_nume_ck CHECK ( length(nume) >= 2
                                           AND REGEXP_LIKE ( nume,
                                                             '^[a-zA-Z ]*$' ) );

ALTER TABLE pacient
    ADD CONSTRAINT pacient_prenume_ck CHECK ( length(prenume) >= 2
                                              AND REGEXP_LIKE ( prenume,
                                                                '^[a-zA-Z ]*$' ) );

ALTER TABLE pacient
    ADD CONSTRAINT pacient_numar_telefon_ck CHECK ( length(numar_telefon) = 10
                                                    AND REGEXP_LIKE ( numar_telefon,
                                                                      '^[0][:7:3:2][0-9 ]*$' ) );

ALTER TABLE pacient
    ADD CONSTRAINT pacient_gen CHECK ( gen IN ( 'Feminin', 'Masculin' ) );

ALTER TABLE pacient ADD CONSTRAINT pacient_pk PRIMARY KEY ( id );

ALTER TABLE pacient ADD CONSTRAINT pacient_numar_telefon_un UNIQUE ( numar_telefon );

CREATE TABLE psihiatru (
    id            NUMBER(5) NOT NULL,
    nume          VARCHAR2(30) NOT NULL,
    prenume       VARCHAR2(30) NOT NULL,
    numar_telefon VARCHAR2(10) NOT NULL,
    email         VARCHAR2(30)
)
LOGGING;

ALTER TABLE psihiatru
    ADD CONSTRAINT psihiatru_nume_ck CHECK ( length(nume) >= 2
                                             AND REGEXP_LIKE ( nume,
                                                               '^[a-zA-Z ]*$' ) );

ALTER TABLE psihiatru
    ADD CONSTRAINT psihiatru_prenume_ck CHECK ( length(prenume) >= 2
                                                AND REGEXP_LIKE ( prenume,
                                                                  '^[a-zA-Z ]*$' ) );

ALTER TABLE psihiatru
    ADD CONSTRAINT psihiatru_numar_telefon_ck CHECK ( length(numar_telefon) = 10
                                                      AND REGEXP_LIKE ( numar_telefon,
                                                                        '^[0][:7:3:2][0-9 ]*$' ) );

ALTER TABLE psihiatru
    ADD CONSTRAINT psihiatru_email_ck CHECK ( REGEXP_LIKE ( email,
                                                            '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE psihiatru ADD CONSTRAINT psihiatru_pk PRIMARY KEY ( id );

ALTER TABLE psihiatru ADD CONSTRAINT psihiatru_numar_telefon_un UNIQUE ( numar_telefon );

ALTER TABLE psihiatru ADD CONSTRAINT psihiatru_email_un UNIQUE ( email );

ALTER TABLE detalii_afectiune
    ADD CONSTRAINT detalii_afectiune_afectiune_fk FOREIGN KEY ( afectiune_id )
        REFERENCES afectiune ( id )
    NOT DEFERRABLE;

ALTER TABLE fisa_afectiune_fk
    ADD CONSTRAINT fisa_afectiune_fk_afectiune_fk FOREIGN KEY ( afectiune_id )
        REFERENCES afectiune ( id )
    NOT DEFERRABLE;

ALTER TABLE fisa_afectiune_fk
    ADD CONSTRAINT fisa_fk_fisa_medicala_fk FOREIGN KEY ( fisa_medicala_id )
        REFERENCES fisa_medicala ( id )
    NOT DEFERRABLE;

ALTER TABLE fisa_medicala
    ADD CONSTRAINT fisa_medicala_pacient_fk FOREIGN KEY ( pacient_id )
        REFERENCES pacient ( id )
    NOT DEFERRABLE;

ALTER TABLE fisa_medicala
    ADD CONSTRAINT fisa_medicala_psihiatru_fk FOREIGN KEY ( psihiatru_id )
        REFERENCES psihiatru ( id )
    NOT DEFERRABLE;

ALTER TABLE mdt_fisa_fk
    ADD CONSTRAINT mdt_fisa_fk_fisa_medicala_fk FOREIGN KEY ( fisa_medicala_id )
        REFERENCES fisa_medicala ( id )
    NOT DEFERRABLE;

ALTER TABLE mdt_fisa_fk
    ADD CONSTRAINT mdt_fisa_fk_medicament_fk FOREIGN KEY ( medicament_id )
        REFERENCES medicament ( id )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER TRG_PACIENT_BRIU 
    BEFORE INSERT OR UPDATE ON PACIENT 
    FOR EACH ROW 
BEGIN
	IF( :NEW.data_nasterii >= sysdate )
	THEN
		raise_application_error( -20001,'Data invalida: ' || to_char( :NEW.data_nasterii, 'DD.MM.YYYY' ) || ' trebuie sa fie mai mica decat data curenta.' );
	END IF;
END; 
/

CREATE SEQUENCE afectiune_id_seq START WITH 100 INCREMENT BY 10 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER afectiune_id_trg BEFORE
    INSERT ON afectiune
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := afectiune_id_seq.nextval;
END;
/

CREATE SEQUENCE fisa_medicala_id_seq START WITH 100 INCREMENT BY 10 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER fisa_medicala_id_trg BEFORE
    INSERT ON fisa_medicala
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := fisa_medicala_id_seq.nextval;
END;
/

CREATE SEQUENCE medicament_id_seq START WITH 100 INCREMENT BY 10 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER medicament_id_trg BEFORE
    INSERT ON medicament
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := medicament_id_seq.nextval;
END;
/

CREATE SEQUENCE pacient_id_seq START WITH 100 INCREMENT BY 10 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER pacient_id_trg BEFORE
    INSERT ON pacient
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := pacient_id_seq.nextval;
END;
/

CREATE SEQUENCE psihiatru_id_seq START WITH 100 INCREMENT BY 10 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER psihiatru_id_trg BEFORE
    INSERT ON psihiatru
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := psihiatru_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             1
-- ALTER TABLE                             36
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
